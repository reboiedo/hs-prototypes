---
import { Icon } from 'astro-icon/components';
import type { Course } from './data/curriculumData';

interface Props {
  course: Course;
}

const { course } = Astro.props;
---

<div class="accordion-wrapper">
  <div class="accordion">
    <div class="accordion-header" aria-expanded="false">
      <div class="accordion-left">
        <h3 class="headline-lg">{course.title}</h3>
        <span class="body-sm credits">{course.credits} Credits</span>
      </div>
      <div class="accordion-button" aria-hidden="true">
        <Icon name="mdi:chevron-down"/>
      </div>
    </div>
    <div class="accordion-content">
      <p class="body-sm">{course.description}</p>
    </div>
  </div>
</div>

<style>
  .accordion-wrapper {
    border-bottom: 1px solid var(--color-gray-200);
  }

  .accordion {
    width: 100%;
  }

  .accordion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-s);
    cursor: pointer;
    padding-block: var(--space-s);
  }

  .accordion-left {
    display: flex;
    flex: 1;
    gap: var(--space-xs);
    justify-content: space-between;
    align-items: center;
  }

  .credits {
    color: var(--color-gray-500);
  }

  @media (max-width: 810px) {
    .accordion-left {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2xs);
    }
  }

  .accordion-button {
    width: var(--size-button-m);
    aspect-ratio: 1;
    border-radius: 100%;
    background-color: var(--color-gray-100);
    display: grid;
    place-items: center;
    color: var(--color-purple-700);
    transition: transform 0.3s ease;
  }

  .accordion.active .accordion-button {
    transform: rotate(180deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }

  .accordion-content p {
    padding-bottom: var(--space-m);
  }

  .accordion.active .accordion-content {
    max-height: 500px;
  }
</style>

<script>
  function initAccordions() {
    const accordions = document.querySelectorAll('.accordion');
    
    accordions.forEach(accordion => {
      const header = accordion.querySelector('.accordion-header');
      
      header?.addEventListener('click', () => {
        accordion.classList.toggle('active');
        
        // Update aria-expanded attribute
        const isExpanded = accordion.classList.contains('active');
        header.setAttribute('aria-expanded', isExpanded.toString());
      });
    });
  }

  // Run initialization when the DOM is ready
  document.addEventListener('DOMContentLoaded', initAccordions);
</script>