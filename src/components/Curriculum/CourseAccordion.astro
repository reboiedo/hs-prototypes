---
import { Icon } from 'astro-icon/components';
import type { Course } from './data/curriculumData';

interface Props {
  course: Course;
}

const { course } = Astro.props;
---

<div class="accordion">
  <div class="accordion-header">
    <h3 class="headline-lg">{course.title}</h3>
    <div class="accordion-right">
      <span class="body-md">{course.credits} Credits</span>
      <button class="accordion-button" aria-label="Toggle course description">
        <Icon name="mdi:chevron-down"/>
      </button>
    </div>
  </div>
  <div class="accordion-content">
    <p class="body-md">{course.description}</p>
  </div>
</div>

<style>
  .accordion {
    border-bottom: 1px solid var(--color-gray-200);
  }

  .accordion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
  }

  .accordion-right {
    display: flex;
    gap: var(--space-xs);
    align-items: center;
    padding-block: var(--space-s);
  }

  .accordion-button {
    width: var(--size-button-m);
    aspect-ratio: 1;
    border-radius: 100%;
    background-color: var(--color-gray-100);
    border: none;
    display: grid;
    place-items: center;
    color: var(--color-purple-700);
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .accordion.active .accordion-button {
    transform: rotate(180deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }

  .accordion-content p {
    padding-bottom: var(--space-m)
  }

  .accordion.active .accordion-content {
    max-height: 500px;
  }
</style>

<script>
  // Initialize all accordions on the page
  function initAccordions() {
    const accordions = document.querySelectorAll('.accordion');
    
    accordions.forEach(accordion => {
      const header = accordion.querySelector('.accordion-header');
      const button = accordion.querySelector('.accordion-button');
      
      // Add click event to both header and button
      [header, button].forEach(el => {
        el?.addEventListener('click', (e) => {
          // Prevent click event from bubbling if clicking the button while header is the listener
          if (e.target !== e.currentTarget && e.currentTarget === header) {
            return;
          }
          
          // Toggle active class
          accordion.classList.toggle('active');
          
          // Update aria-expanded attribute
          const isExpanded = accordion.classList.contains('active');
          button?.setAttribute('aria-expanded', isExpanded.toString());
        });
      });
    });
  }

  // Run initialization when the DOM is ready
  document.addEventListener('DOMContentLoaded', initAccordions);
</script>